<%- include('partials/header') %>

<div class="level">
    <div class="level-left">
        <div class="level-item">
            <h1 class="title">Eventos</h1>
        </div>
    </div>
    <div class="level-right">
        <div class="level-item">
            <button class="button is-primary" onclick="openNewEventModal()">
                <span class="icon">
                    <i class="fas fa-plus"></i>
                </span>
                <span>Novo Evento</span>
            </button>
        </div>
    </div>
</div>

    <div class="box">
    <table class="table is-fullwidth">
        <thead>
            <tr>
                <th>Data</th>
                <th>Nome</th>
                <th>Ministério</th>
                <th>Pessoas Escaladas</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody id="events-list">
            <!-- filled by client JS -->
        </tbody>
    </table>
</div>

<!-- Modal for new/edit event -->
<div class="modal" id="eventModal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Novo Evento</p>
            <button class="delete" aria-label="close" onclick="closeEventModal()"></button>
        </header>
        <form id="eventForm" onsubmit="saveEvent(event)">
            <section class="modal-card-body">
                <div class="field">
                    <label class="label">Nome</label>
                    <div class="control">
                        <input class="input" type="text" name="name" required>
                    </div>
                </div>
                <div class="field">
                    <label class="label">Data</label>
                    <div class="control">
                        <input class="input" type="date" name="date" required>
                    </div>
                </div>
                <div class="field">
                    <label class="label">Ministério</label>
                    <div class="control">
                            <div class="select">
                                <select name="ministry" required id="event-ministry-select">
                                    <option value="">Selecione um ministério</option>
                                </select>
                            </div>
                        </div>
                </div>
                <div class="field">
                    <label class="label">Pessoas</label>
                    <div class="control">
                            <div class="select is-multiple">
                            <select multiple size="4" name="people" id="event-people-select">
                                <!-- populated by client JS -->
                            </select>
                        </div>
                    </div>
                </div>
            </section>
            <footer class="modal-card-foot">
                <button type="submit" class="button is-primary">Salvar</button>
                <button type="button" class="button" onclick="closeEventModal()">Cancelar</button>
            </footer>
        </form>
    </div>
</div>

<script>
function openNewEventModal() {
    document.getElementById('eventModal').classList.add('is-active');
    document.getElementById('eventForm').reset();
}

function closeEventModal() {
    document.getElementById('eventModal').classList.remove('is-active');
}

async function saveEvent(event) {
    event.preventDefault();
    const form = event.target;
    const selectedPeople = Array.from(form.people.selectedOptions).map(option => option.value);
    
    const data = {
        name: form.name.value,
        date: form.date.value,
        ministry: form.ministry.value,
        people: selectedPeople
    };

    try {
        const response = await fetch('/api/eventos', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });

        if (!response.ok) {
            const error = await response.json();
            throw new Error(error.message || 'Erro ao criar evento');
        }

        window.location.reload();
    } catch (error) {
        alert(error.message);
    }
}
</script>

<script src="/js/app.js"></script>
<script>
// Populate ministry and people selects when modal opens
async function openNewEventModal() {
    document.getElementById('eventModal').classList.add('is-active');
    document.getElementById('eventForm').reset();
    try {
        const ministries = await loadMinistries();
        const select = document.getElementById('event-ministry-select');
        select.innerHTML = '<option value="">Selecione um ministério</option>';
        ministries.forEach(m => {
            const opt = document.createElement('option');
            opt.value = m.id || m._id || m.name;
            opt.textContent = m.name || m.title || opt.value;
            select.appendChild(opt);
        });

        const people = await fetch('/api/people');
        // If the API isn't proxied, try direct fetchWithAuth instead
        // populate event-people-select if possible
    } catch (e) {
        console.warn('Could not populate selects:', e.message);
    }
}

// Override saveEvent to use client fetch
async function saveEvent(event) {
    event.preventDefault();
    const form = event.target;
    const selectedPeople = Array.from(form.people.selectedOptions).map(option => option.value);
    const data = {
        title: form.name.value,
        date: form.date.value,
        ministryId: form.ministry.value,
        assignments: selectedPeople.map(p => ({ personId: p }))
    };

    try {
        const token = getToken();
        const res = await fetch('http://localhost:3000/api/events', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': token ? 'Bearer ' + token : ''
            },
            body: JSON.stringify(data)
        });
        if (!res.ok) {
            const err = await res.text();
            throw new Error(err || 'Erro ao criar evento');
        }
        window.location.reload();
    } catch (err) {
        alert('Erro ao salvar evento: ' + err.message);
    }
}
</script>

<%- include('partials/footer') %>